########################################################################################
    # This Config is generated by DICE_BAG to be used with MediTAF
    # This file should not be pushed to GITHUB
    # Further documentation can be found here: Medinet - MIST - Setting up configurations
########################################################################################

# How to configure multiple app with appropriate database connections using pipe and delimiters:

# How to configure multiple app with appropriate resources using pipe and delimiters:
# You can pass app information by calling APP_RESOURCES as such
#   - APP_RESOURCES="app_name,base_url,username,password"
#   - APP_RESOURCES="app_name,base_url,username,password, repeat"
#   - APP_RESOURCES="app_name,base_url,username1,password1,username2,password2,username3,password3,username4,password4"
#   - APP_RESOURCES="app_name1,base_url1,username,password|app_name2,base_url2,username,password, repeat|app_name3,base_url3,username1,password1,username2,password2"

# How to configure multiple extra utilities to app with appropriate contents using pipe and delimiters:
# How to configure multiple utilities to app with appropriate contents using pipe and delimiters:
# You can insert new utilities to specific app information by calling UTIL_RESOURCES as such
#   - UTIL_RESOURCES="app_name,param1,value1,param2,value2", e.g. UTIL_RESOURCES="app_name,cinco,may,apple,http:google.com"
#   - UTIL_RESOURCES="app_name1,param11,value11,param12,value12|app_name2,param21,value21", e.g. UTIL_RESOURCES="app_name1,cinco,may,apple,http:google.com|app_name2,may,june"
#
#   You can also dynamically generate resource service client such Eurosource and Mauth. Eurosource and Mauth can be dynamically generated, but is also possible to generate new client dynamically.
#   For instance
#   Mauth can be generated
#   - MAUTH="mauth_url,authenticate_responses,stage,app_uuid,mauth_api_version", e.g. MAUTH="http://mauth.com,yes,One,6464646d64646,version 1"
#   Euresource can be generated as:
#   - EURESOURCE="eureka_url,mauth_url,authenticate_responses,stage,app_uuid", e.g. EURESOURCE="http://rave.com,http://mauth.com,yes,One,6464646d64646"
#   Services are generated dynamically as
#   - #   - SERVICE_RESOURCES="service1,param1,value1,param2,value2", e.g. SERVICE_RESOURCES="athena,athena_url,http://athena.com,authenticate_responses,yes"
#   - #   - SERVICE_RESOURCES="service1,param11,value11,param12,value12|service2,param21,value21,param22,value22,param23,value23", e.g. SERVICE_RESOURCES="athena,athena_url,http://athena.com,authenticate_responses,yes|plinth,plinth_url,http://plinth.org,planet,mars"
#   You could merge everything as seen below
#   - MAUTH="http://mauth.com,yes,One,6464646d64646,version 1" EURESOURCE="http://rave.com,http://mauth.com,yes,One,6464646d64646" SERVICE_RESOURCES="athena,athena_url,http://athena.com,authenticate_responses,yes|plinth,plinth_url,http://plinth.org,planet,mars" bundle exec rake mist:config

modules:
    services:<% if (configured.euresource) %><% adapters='euresource' %><% end %><% if (configured.mauth) %><% adapters=adapters ? "#{adapters}, mauth" : 'mauth' %><% end %><% if (configured.service_resources) %><% service_resources =  configured.service_resources ? configured.service_resources.split("|"):[] %><% service_resources.each do |resources| %><% service_resource = resources ? resources.split(","):[] %><% adapters=adapters ? "#{adapters}, #{service_resource[0]}" : service_resource[0] %><% end %><% end %>
        adapters: <%= adapters %><% if (configured.euresource) %>
        euresource: <% euresource = configured.euresource.split(",") %>
            eureka_url: <%= euresource[0] %>
            mauth_url: <%= euresource[1] %>
            authenticate_responses: <%= euresource[2] %>
            stage: <%= euresource[3] %>
            app_uuid: <%= euresource[4] %>
            key_file: config/mauth_private_key_file<% end %><% if (configured.mauth) %>
        mauth: <% mauth = configured.mauth.split(",") %>
            mauth_url: <%= mauth[0] %>
            authenticate_responses: <%= mauth[1] %>
            stage: <%= mauth[2] %>
            app_uuid: <%= mauth[3] %>
            key_file: config/mauth_private_key_file
            mauth_api_version: <%= mauth[4] %><% end %><% if (configured.service_resources) %><% service_resources = configured.service_resources ? configured.service_resources.split("|"):[] %><% service_resources.each do |resources| %><% service_resource = resources ? resources.split(","):[] %>
        <%= service_resource[0].sub(/^\s+/, '').sub(/\s+$/, '') %>:<% for i in 0..(service_resource.count)/2 - 1 %>
            <%= service_resource[2*i+1] %>: <%= service_resource[2*i+2] %><% end %><% end %><% end %>
    ui:
        browser: <%= configured.browser %>
        capybara:
            default_driver: <%= configured.driver %>
            run_server: <%= configured.run_server %>
            default_selector: <%= configured.default_selector %>
            app_host: <%= configured.app_host %>
            app: <%= configured.app %>
            default_max_wait_time: <%= configured.default_max_wait_time %>
            screen_resolution:
                width: <%= configured.width %>
                height: <%= configured.height %>
        apps:<% app_resources =  configured.app_resources ? configured.app_resources.split("|"):[] %><% app_resources.each do |resources| %><% app_resource = resources ? resources.split(","):[] %>
            <%= app_resource[0].sub(/^\s+/, '').sub(/\s+$/, '') %>:
                  base_url: <%= app_resource[1]||'' %>
                  users:<% _contents={} %><% unless (app_resource.count == 5) %><% for i in 1..(app_resource.count/2 -1) %><% _contents[app_resource[2*i]]=app_resource[2*i+1] %><% end %><% else %><% for i in 1..app_resource[4].to_i %><% _contents[app_resource[2] + i.to_s]=app_resource[3] %><% end %><% end %><% _contents.each do |_username, _password| %>
                      <%= _username %>: <%= _password %><% end %><% end %>
    utils:
        gmail:
            gmail_user_addr: <%= configured.gmail_user_addr %>
            gmail_user_password: <%= configured.gmail_user_password %>
            gmail_imd_addr: <%= configured.gmail_imd_addr %>
        apps:<% util_resources =  configured.util_resources ? configured.util_resources.split("|"):[] %><% util_resources.each do |resources| %><% util_resource = resources ? resources.split(","):[] %>
            <%= util_resource[0].sub(/^\s+/, '').sub(/\s+$/, '') %>:<% for i in 0..(util_resource.count)/2 - 1 %>
                <%= util_resource[2*i+1] %>:  <%= util_resource[2*i+2] %><% end %><% end %>
    logging:<% if (configured.logging_resources) %><% logging_resources = configured.logging_resources.split("|") %>
        filepath: <%= logging_resources[0] %>
        level: <%= logging_resources[1] %><% else %>
        filepath: <%= configured.log_file %>
        level: <%= configured.log_level %><% end %>

